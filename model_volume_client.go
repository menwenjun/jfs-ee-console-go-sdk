/*
JuiceFS console API

API of the JuiceFS console (https://juicefs.com/api/v1)

API version: 0.0.1
Contact: team@juicedata.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeClient{}

// VolumeClient struct for VolumeClient
type VolumeClient struct {
	Hostname *string `json:"hostname,omitempty"`
	Ip *string `json:"ip,omitempty"`
	Mountpoint *string `json:"mountpoint,omitempty"`
	Openfiles *int32 `json:"openfiles,omitempty"`
	Version *string `json:"version,omitempty"`
	Operations map[string]interface{} `json:"operations,omitempty"`
	Stats map[string]interface{} `json:"stats,omitempty"`
}

// NewVolumeClient instantiates a new VolumeClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeClient() *VolumeClient {
	this := VolumeClient{}
	return &this
}

// NewVolumeClientWithDefaults instantiates a new VolumeClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeClientWithDefaults() *VolumeClient {
	this := VolumeClient{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *VolumeClient) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeClient) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *VolumeClient) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *VolumeClient) SetHostname(v string) {
	o.Hostname = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *VolumeClient) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeClient) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *VolumeClient) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *VolumeClient) SetIp(v string) {
	o.Ip = &v
}

// GetMountpoint returns the Mountpoint field value if set, zero value otherwise.
func (o *VolumeClient) GetMountpoint() string {
	if o == nil || IsNil(o.Mountpoint) {
		var ret string
		return ret
	}
	return *o.Mountpoint
}

// GetMountpointOk returns a tuple with the Mountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeClient) GetMountpointOk() (*string, bool) {
	if o == nil || IsNil(o.Mountpoint) {
		return nil, false
	}
	return o.Mountpoint, true
}

// HasMountpoint returns a boolean if a field has been set.
func (o *VolumeClient) HasMountpoint() bool {
	if o != nil && !IsNil(o.Mountpoint) {
		return true
	}

	return false
}

// SetMountpoint gets a reference to the given string and assigns it to the Mountpoint field.
func (o *VolumeClient) SetMountpoint(v string) {
	o.Mountpoint = &v
}

// GetOpenfiles returns the Openfiles field value if set, zero value otherwise.
func (o *VolumeClient) GetOpenfiles() int32 {
	if o == nil || IsNil(o.Openfiles) {
		var ret int32
		return ret
	}
	return *o.Openfiles
}

// GetOpenfilesOk returns a tuple with the Openfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeClient) GetOpenfilesOk() (*int32, bool) {
	if o == nil || IsNil(o.Openfiles) {
		return nil, false
	}
	return o.Openfiles, true
}

// HasOpenfiles returns a boolean if a field has been set.
func (o *VolumeClient) HasOpenfiles() bool {
	if o != nil && !IsNil(o.Openfiles) {
		return true
	}

	return false
}

// SetOpenfiles gets a reference to the given int32 and assigns it to the Openfiles field.
func (o *VolumeClient) SetOpenfiles(v int32) {
	o.Openfiles = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *VolumeClient) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeClient) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *VolumeClient) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *VolumeClient) SetVersion(v string) {
	o.Version = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *VolumeClient) GetOperations() map[string]interface{} {
	if o == nil || IsNil(o.Operations) {
		var ret map[string]interface{}
		return ret
	}
	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeClient) GetOperationsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Operations) {
		return map[string]interface{}{}, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *VolumeClient) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given map[string]interface{} and assigns it to the Operations field.
func (o *VolumeClient) SetOperations(v map[string]interface{}) {
	o.Operations = v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *VolumeClient) GetStats() map[string]interface{} {
	if o == nil || IsNil(o.Stats) {
		var ret map[string]interface{}
		return ret
	}
	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeClient) GetStatsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Stats) {
		return map[string]interface{}{}, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *VolumeClient) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given map[string]interface{} and assigns it to the Stats field.
func (o *VolumeClient) SetStats(v map[string]interface{}) {
	o.Stats = v
}

func (o VolumeClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Mountpoint) {
		toSerialize["mountpoint"] = o.Mountpoint
	}
	if !IsNil(o.Openfiles) {
		toSerialize["openfiles"] = o.Openfiles
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	return toSerialize, nil
}

type NullableVolumeClient struct {
	value *VolumeClient
	isSet bool
}

func (v NullableVolumeClient) Get() *VolumeClient {
	return v.value
}

func (v *NullableVolumeClient) Set(val *VolumeClient) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeClient) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeClient(val *VolumeClient) *NullableVolumeClient {
	return &NullableVolumeClient{value: val, isSet: true}
}

func (v NullableVolumeClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


