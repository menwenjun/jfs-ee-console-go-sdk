/*
JuiceFS console API

API of the JuiceFS console (https://juicefs.com/api/v1)

API version: 0.0.1
Contact: team@juicedata.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VolumeKerberosProxy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeKerberosProxy{}

// VolumeKerberosProxy struct for VolumeKerberosProxy
type VolumeKerberosProxy struct {
	User string `json:"user"`
	ProxyUsers *string `json:"proxy_users,omitempty"`
	ProxyGroups *string `json:"proxy_groups,omitempty"`
	ProxyHosts *string `json:"proxy_hosts,omitempty"`
}

type _VolumeKerberosProxy VolumeKerberosProxy

// NewVolumeKerberosProxy instantiates a new VolumeKerberosProxy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeKerberosProxy(user string) *VolumeKerberosProxy {
	this := VolumeKerberosProxy{}
	this.User = user
	var proxyUsers string = "*"
	this.ProxyUsers = &proxyUsers
	var proxyGroups string = "*"
	this.ProxyGroups = &proxyGroups
	var proxyHosts string = "*"
	this.ProxyHosts = &proxyHosts
	return &this
}

// NewVolumeKerberosProxyWithDefaults instantiates a new VolumeKerberosProxy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeKerberosProxyWithDefaults() *VolumeKerberosProxy {
	this := VolumeKerberosProxy{}
	var proxyUsers string = "*"
	this.ProxyUsers = &proxyUsers
	var proxyGroups string = "*"
	this.ProxyGroups = &proxyGroups
	var proxyHosts string = "*"
	this.ProxyHosts = &proxyHosts
	return &this
}

// GetUser returns the User field value
func (o *VolumeKerberosProxy) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *VolumeKerberosProxy) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *VolumeKerberosProxy) SetUser(v string) {
	o.User = v
}

// GetProxyUsers returns the ProxyUsers field value if set, zero value otherwise.
func (o *VolumeKerberosProxy) GetProxyUsers() string {
	if o == nil || IsNil(o.ProxyUsers) {
		var ret string
		return ret
	}
	return *o.ProxyUsers
}

// GetProxyUsersOk returns a tuple with the ProxyUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeKerberosProxy) GetProxyUsersOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyUsers) {
		return nil, false
	}
	return o.ProxyUsers, true
}

// HasProxyUsers returns a boolean if a field has been set.
func (o *VolumeKerberosProxy) HasProxyUsers() bool {
	if o != nil && !IsNil(o.ProxyUsers) {
		return true
	}

	return false
}

// SetProxyUsers gets a reference to the given string and assigns it to the ProxyUsers field.
func (o *VolumeKerberosProxy) SetProxyUsers(v string) {
	o.ProxyUsers = &v
}

// GetProxyGroups returns the ProxyGroups field value if set, zero value otherwise.
func (o *VolumeKerberosProxy) GetProxyGroups() string {
	if o == nil || IsNil(o.ProxyGroups) {
		var ret string
		return ret
	}
	return *o.ProxyGroups
}

// GetProxyGroupsOk returns a tuple with the ProxyGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeKerberosProxy) GetProxyGroupsOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyGroups) {
		return nil, false
	}
	return o.ProxyGroups, true
}

// HasProxyGroups returns a boolean if a field has been set.
func (o *VolumeKerberosProxy) HasProxyGroups() bool {
	if o != nil && !IsNil(o.ProxyGroups) {
		return true
	}

	return false
}

// SetProxyGroups gets a reference to the given string and assigns it to the ProxyGroups field.
func (o *VolumeKerberosProxy) SetProxyGroups(v string) {
	o.ProxyGroups = &v
}

// GetProxyHosts returns the ProxyHosts field value if set, zero value otherwise.
func (o *VolumeKerberosProxy) GetProxyHosts() string {
	if o == nil || IsNil(o.ProxyHosts) {
		var ret string
		return ret
	}
	return *o.ProxyHosts
}

// GetProxyHostsOk returns a tuple with the ProxyHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeKerberosProxy) GetProxyHostsOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyHosts) {
		return nil, false
	}
	return o.ProxyHosts, true
}

// HasProxyHosts returns a boolean if a field has been set.
func (o *VolumeKerberosProxy) HasProxyHosts() bool {
	if o != nil && !IsNil(o.ProxyHosts) {
		return true
	}

	return false
}

// SetProxyHosts gets a reference to the given string and assigns it to the ProxyHosts field.
func (o *VolumeKerberosProxy) SetProxyHosts(v string) {
	o.ProxyHosts = &v
}

func (o VolumeKerberosProxy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeKerberosProxy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	if !IsNil(o.ProxyUsers) {
		toSerialize["proxy_users"] = o.ProxyUsers
	}
	if !IsNil(o.ProxyGroups) {
		toSerialize["proxy_groups"] = o.ProxyGroups
	}
	if !IsNil(o.ProxyHosts) {
		toSerialize["proxy_hosts"] = o.ProxyHosts
	}
	return toSerialize, nil
}

func (o *VolumeKerberosProxy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeKerberosProxy := _VolumeKerberosProxy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeKerberosProxy)

	if err != nil {
		return err
	}

	*o = VolumeKerberosProxy(varVolumeKerberosProxy)

	return err
}

type NullableVolumeKerberosProxy struct {
	value *VolumeKerberosProxy
	isSet bool
}

func (v NullableVolumeKerberosProxy) Get() *VolumeKerberosProxy {
	return v.value
}

func (v *NullableVolumeKerberosProxy) Set(val *VolumeKerberosProxy) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeKerberosProxy) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeKerberosProxy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeKerberosProxy(val *VolumeKerberosProxy) *NullableVolumeKerberosProxy {
	return &NullableVolumeKerberosProxy{value: val, isSet: true}
}

func (v NullableVolumeKerberosProxy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeKerberosProxy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


