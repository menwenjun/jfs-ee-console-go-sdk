/*
JuiceFS console API

API of the JuiceFS console (https://juicefs.com/api/v1)

API version: 0.0.1
Contact: team@juicedata.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetadataDnsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataDnsGet200Response{}

// MetadataDnsGet200Response struct for MetadataDnsGet200Response
type MetadataDnsGet200Response struct {
	// a list of node IP
	Ips []string `json:"ips,omitempty"`
}

// NewMetadataDnsGet200Response instantiates a new MetadataDnsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataDnsGet200Response() *MetadataDnsGet200Response {
	this := MetadataDnsGet200Response{}
	return &this
}

// NewMetadataDnsGet200ResponseWithDefaults instantiates a new MetadataDnsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataDnsGet200ResponseWithDefaults() *MetadataDnsGet200Response {
	this := MetadataDnsGet200Response{}
	return &this
}

// GetIps returns the Ips field value if set, zero value otherwise.
func (o *MetadataDnsGet200Response) GetIps() []string {
	if o == nil || IsNil(o.Ips) {
		var ret []string
		return ret
	}
	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataDnsGet200Response) GetIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ips) {
		return nil, false
	}
	return o.Ips, true
}

// HasIps returns a boolean if a field has been set.
func (o *MetadataDnsGet200Response) HasIps() bool {
	if o != nil && !IsNil(o.Ips) {
		return true
	}

	return false
}

// SetIps gets a reference to the given []string and assigns it to the Ips field.
func (o *MetadataDnsGet200Response) SetIps(v []string) {
	o.Ips = v
}

func (o MetadataDnsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataDnsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ips) {
		toSerialize["ips"] = o.Ips
	}
	return toSerialize, nil
}

type NullableMetadataDnsGet200Response struct {
	value *MetadataDnsGet200Response
	isSet bool
}

func (v NullableMetadataDnsGet200Response) Get() *MetadataDnsGet200Response {
	return v.value
}

func (v *NullableMetadataDnsGet200Response) Set(val *MetadataDnsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataDnsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataDnsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataDnsGet200Response(val *MetadataDnsGet200Response) *NullableMetadataDnsGet200Response {
	return &NullableMetadataDnsGet200Response{value: val, isSet: true}
}

func (v NullableMetadataDnsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataDnsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


