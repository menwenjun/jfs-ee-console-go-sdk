/*
JuiceFS console API

Testing VolumeTrashAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/menwenjun/jfs-ee-console-go-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_VolumeTrashAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test VolumeTrashAPIService VolumesVolumeIDDeleteTrashPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var volumeID int32

		httpRes, err := apiClient.VolumeTrashAPI.VolumesVolumeIDDeleteTrashPost(context.Background(), volumeID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VolumeTrashAPIService VolumesVolumeIDEmptyTrashPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var volumeID int32

		httpRes, err := apiClient.VolumeTrashAPI.VolumesVolumeIDEmptyTrashPost(context.Background(), volumeID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VolumeTrashAPIService VolumesVolumeIDListTrashGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var volumeID int32

		resp, httpRes, err := apiClient.VolumeTrashAPI.VolumesVolumeIDListTrashGet(context.Background(), volumeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VolumeTrashAPIService VolumesVolumeIDRestoreFilePost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var volumeID int32

		httpRes, err := apiClient.VolumeTrashAPI.VolumesVolumeIDRestoreFilePost(context.Background(), volumeID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
