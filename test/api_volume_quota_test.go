/*
JuiceFS console API

Testing VolumeQuotaAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_VolumeQuotaAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test VolumeQuotaAPIService VolumesVolumeIDQuotasGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volumeID int32

		resp, httpRes, err := apiClient.VolumeQuotaAPI.VolumesVolumeIDQuotasGet(context.Background(), volumeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VolumeQuotaAPIService VolumesVolumeIDQuotasPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volumeID int32

		resp, httpRes, err := apiClient.VolumeQuotaAPI.VolumesVolumeIDQuotasPost(context.Background(), volumeID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VolumeQuotaAPIService VolumesVolumeIDQuotasVolumeQuotaIDDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volumeID int32
		var volumeQuotaID int32

		httpRes, err := apiClient.VolumeQuotaAPI.VolumesVolumeIDQuotasVolumeQuotaIDDelete(context.Background(), volumeID, volumeQuotaID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VolumeQuotaAPIService VolumesVolumeIDQuotasVolumeQuotaIDGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volumeID int32
		var volumeQuotaID int32

		resp, httpRes, err := apiClient.VolumeQuotaAPI.VolumesVolumeIDQuotasVolumeQuotaIDGet(context.Background(), volumeID, volumeQuotaID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VolumeQuotaAPIService VolumesVolumeIDQuotasVolumeQuotaIDPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volumeID int32
		var volumeQuotaID int32

		resp, httpRes, err := apiClient.VolumeQuotaAPI.VolumesVolumeIDQuotasVolumeQuotaIDPut(context.Background(), volumeID, volumeQuotaID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
